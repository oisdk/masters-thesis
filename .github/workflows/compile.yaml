name: Compile Agda and LaTeX and Deploy to Site
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.markdown'

jobs:
  compile-agda:
    name: Compile Agda
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        cubical-ref: ["v0.3"]
        agda-ver: ["2.6.2"]

    steps:

# Install Agda
    - uses: wenkokke/setup-agda@v2.0.0
      with:
        agda-version: ${{ matrix.agda-ver }}
        agda-stdlib-version: 'recommended'
        agda-libraries: |
          https://github.com/agda/cubical.git#${{ matrix.cubical-ref }}

# Download and compile main library
    - name: Checkout main
      uses: actions/checkout@v3.4.0
      with:
        path: main

    - uses: actions/cache@v3.3.1
      name: Cache agda library
      id: cache-agda
      with:
        path: ~/main-build
        key: ${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.cubical-ref }}-${{ hashFiles('main/agda/**') }}-${{ hashFiles('main/scripts/replace.sed') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.cubical-ref }}-${{ hashFiles('main/agda/**') }}-
          ${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.cubical-ref }}-
          ${{ runner.os }}-${{ matrix.agda-ver }}-

    - name: Cache hit (agda); Retrieve agda library
      if: steps.cache-agda.outputs.cache-hit == 'true'
      run: cp -f -R ~/main-build/* $GITHUB_WORKSPACE/main/agda

    - name: Cache miss (agda); Compile agda library
      if: steps.cache-agda.outputs.cache-hit != 'true'
      run: |
        set -e
        mkdir -p ~/main-build/_build
        cp -f -R ~/main-build/_build $GITHUB_WORKSPACE/main/agda/_build
        rm -r ~/main-build
        cd main/agda
        echo "::group::Typechecking and Rendering HTML"
        ./scripts/render.sh
        echo "::endgroup::"

        echo "::group::Installing LaTeX"
        sudo apt-get update  
        sudo apt-get install texlive-binaries
        echo "::endgroup::"

        echo "::group::Rendering Agda LaTeX"
        find . -type f -name '*.lagda' | while read -r code ; do
            echo "$code"
            agda --latex --latex-dir=. $code
            dir=$(dirname "$code")
            file=$(basename "$code" .lagda).tex
            sed -i -f ../scripts/replace.sed "$dir/$file"
        done
        echo "::endgroup::"

        cd ../..
        cp -f -R main/agda/ ~/main-build/

    - name: Upload rendered agda code as artefact
      uses: actions/upload-artifact@v3
      with:
        name: agda-code
        path: main/agda/**/*.tex

    - name: Deploy html to github pages
      if: steps.cache-agda.outputs.cache-hit != 'true'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: main/agda/docs
        destination_dir: agda

  generate-pdf:
    name: Compile LaTeX and generate pdf
    needs: compile-agda
    runs-on: ubuntu-20.04

    steps:

    - name: Checkout main
      uses: actions/checkout@v3.4.0
      with:
        path: main

    - name: Download compiled agda code
      uses: actions/download-artifact@v3
      with:
        name: agda-code
        path: main/agda

    - name: Remove .latexmkrc
      run: rm main/.latexmkrc

    - name: Compile latex
      uses: xu-cheng/latex-action@v2
      with:
        working_directory: main
        root_file: paper.tex

    - name: Upload generated pdf
      uses: actions/upload-artifact@v3
      with:
        name: paper
        path: main/paper.pdf

    - name: Make site folder
      run: mkdir site

    - name: Move generated pdf into site folder
      run: mv main/paper.pdf site/paper.pdf

    - name: Deploy html to github pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: site
        destination_dir: paper
