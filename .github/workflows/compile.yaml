name: Compile LaTeX and HTML
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        cubical-ref: ["a60b0c6576fac0ba6e181cab75f9f9de2d167f87"]
        agda-ref: ["v2.6.2"]
        ghc-ver: ["9.0.1"]
        cabal-ver: ["3.4.0.0"]

    steps:

# Download this git repo
    - name: Checkout main
      uses: actions/checkout@v2
      with:
        path: main

# Install GHC & Cabal
    - uses: actions/cache@v2
      name: Cache cabal packages
      id: cache-cabal
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          ~/.cabal/bin
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc-ver }}-${{ matrix.cabal-ver }}-${{ matrix.agda-ref }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc-ver }}-${{ matrix.cabal-ver }}-${{ matrix.agda-ref }}
          ${{ runner.os }}-${{ matrix.ghc-ver }}-${{ matrix.cabal-ver }}-

    - name: Install cabal
      if: steps.cache-cabal.outputs.cache-hit != 'true'
      uses: actions/setup-haskell@v1.1.4
      with:
        ghc-version: ${{ matrix.ghc-ver }}
        cabal-version: ${{ matrix.cabal-ver }}

    - name: Put cabal programs in PATH
      run: echo "~/.cabal/bin" >> $GITHUB_PATH

    - name: Download Agda from github
      if: steps.cache-cabal.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: agda/agda
        path: agda
        ref: ${{ matrix.agda-ref }}
      
    - name: Install Agda
      if: steps.cache-cabal.outputs.cache-hit != 'true'
      run: |
        cabal update
        cabal install --overwrite-policy=always --ghc-options='-O2 +RTS -M6G -RTS' alex-3.2.6
        cabal install --overwrite-policy=always --ghc-options='-O2 +RTS -M6G -RTS' happy-1.19.12
        cd agda
        mkdir -p doc
        touch doc/user-manual.pdf
        cabal install --overwrite-policy=always --ghc-options='-O2 +RTS -M6G -RTS'

# Download and compile cubical library
    - name: Checkout cubical library
      uses: actions/checkout@v2
      with:
        repository: agda/cubical
        path: cubical
        ref: ${{ matrix.cubical-ref }}

    - name: Cache cubical library
      uses: actions/cache@v2
      id: cache-cubical
      with:
        path: ~/cubical-build
        key: ${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.cubical-ref }}

    - name: Put cubical library in Agda library list
      run: |
        mkdir -p ~/.agda/
        touch ~/.agda/libraries
        echo "$GITHUB_WORKSPACE/cubical/cubical.agda-lib" > ~/.agda/libraries

    - name: Cache miss on cubical library; compile cubical library
      if: steps.cache-cubical.outputs.cache-hit != 'true'
      run: |
        cd $GITHUB_WORKSPACE/cubical
        agda Cubical/Core/Everything.agda
        agda Cubical/Foundations/Everything.agda
        find Cubical/Data -type f -name "*.agda" | while read -r code ; do
            agda $code
        done
        find Cubical/HITs -type f -name "*.agda" | while read -r code ; do
            agda $code
        done
        cp -f -r _build/ ~/cubical-build

    - name: Cache hit on cubical library; retrieve cubical library
      if: steps.cache-cubical.outputs.cache-hit == 'true'
      run: |
        mkdir -p cubical/_build
        cp -f -r ~/cubical-build/* cubical/_build

# Download and compile agda code

    - uses: actions/cache@v2
      name: Cache agda code
      id: cache-agda
      with:
        path: ~/main-build
        key: html-and-tex-${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.cubical-ref }}-${{ hashFiles('main/agda/**') }}
        restore-keys: |
          html-and-tex-${{ runner.os }}-${{ matrix.agda-ver }}-${{ matrix.cubical-ref }}-
          html-and-tex-${{ runner.os }}-${{ matrix.agda-ver }}-

    - name: Cache hit on agda code; retrieve agda code library
      if: steps.cache-agda.outputs.cache-hit == 'true'
      run: cp -f -R ~/main-build/* $GITHUB_WORKSPACE/main/agda

    - name: Cache miss on agda code; compile Agda code
      if: steps.cache-agda.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/main-build/_build
        cp -f -R ~/main-build/_build main/agda/_build
        rm -r ~/main-build

        cd main
        ./scripts/generate-everything-agda.sh Everything
        cd agda
        agda --html --html-dir=docs Everything.agda
        rm Everything.agda

        sudo apt-get install texlive-binaries
        find . -type f -name '*.lagda' | while read -r code ; do
            agda --latex --latex-dir=. $code
        done
        cd ..
        cp -f -R agda/ ~/main-build/

# Compile pdf
    - name: Remove .latexmkrc
      run: rm main/.latexmkrc

    - name: Compile latex
      uses: xu-cheng/latex-action@v2
      with:
        working_directory: main
        root_file: paper.tex

    - name: Upload generated pdf
      uses: actions/upload-artifact@v2
      with:
        name: paper
        path: main/paper.pdf

    - name: Make site folder
      run: mkdir site

    - name: Move generated pdf into site folder
      run: mv main/paper.pdf site/paper.pdf

    - name: Move agda html into site folder
      run: mv main/agda/docs site/agda

    - name: Deploy html and pdf to github pages
      uses: peaceiris/actions-gh-pages@v3.7.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: site
        destination_dir: agda-tex
